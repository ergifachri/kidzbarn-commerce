{"ast":null,"code":"import _classCallCheck from \"D:\\\\selflearning\\\\all_in_one_multikart_react\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\selflearning\\\\all_in_one_multikart_react\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\selflearning\\\\all_in_one_multikart_react\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\selflearning\\\\all_in_one_multikart_react\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\selflearning\\\\all_in_one_multikart_react\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\selflearning\\\\all_in_one_multikart_react\\\\front-end\\\\src\\\\components\\\\collection\\\\common\\\\filter.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport InputRange from 'react-input-range';\nimport 'react-input-range/lib/css/index.css';\nimport { SlideToggle } from 'react-slide-toggle';\nimport { getBrands, getColors, getMinMaxPrice } from '../../../services';\nimport { filterBrand, filterColor, filterPrice } from '../../../actions';\n\nvar Filter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Filter, _Component);\n\n  function Filter(props) {\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filter).call(this, props));\n\n    _this.closeFilter = function () {\n      document.querySelector(\".collection-filter\").style = \"left: -365px\";\n    };\n\n    _this.state = {\n      openFilter: false\n    };\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"clickBrandHendle\",\n    value: function clickBrandHendle(event, brands) {\n      alert('test');\n      console.log(brands);\n      brands = [];\n      brands.push(event.target.value); // push in array checked value\n\n      /* var index = brands.indexOf(event.target.value);\r\n      if (event.target.checked)\r\n       else\r\n          brands.splice(index, 1); // removed in array unchecked value  */\n\n      this.props.filterBrand(brands);\n    }\n  }, {\n    key: \"colorHandle\",\n    value: function colorHandle(event, color) {\n      var elems = document.querySelectorAll(\".color-selector ul li\");\n      [].forEach.call(elems, function (el) {\n        el.classList.remove(\"active\");\n      });\n      event.target.classList.add('active');\n      this.props.filterColor(color);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var filteredBrands = this.props.filters.brand; //console.log(this.props.brands);\n\n      return React.createElement(\"div\", {\n        className: \"collection-filter-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"collection-mobile-back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"filter-back\",\n        onClick: function onClick(e) {\n          return _this2.closeFilter(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-angle-left\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), \" back\")), React.createElement(SlideToggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, function (_ref) {\n        var onToggle = _ref.onToggle,\n            setCollapsibleElement = _ref.setCollapsibleElement;\n        return React.createElement(\"div\", {\n          className: \"collection-collapse-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: \"collapse-block-title\",\n          onClick: onToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"brand\"), React.createElement(\"div\", {\n          className: \"collection-collapse-block-content\",\n          ref: setCollapsibleElement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"collection-brand-filter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, _this2.props.brands.map(function (brand, index) {\n          /* console.log('filteredBrands');\r\n          console.log(filteredBrands); */\n          return React.createElement(\"div\", {\n            className: \"collection-filter-checkbox\",\n            key: index,\n            onClick: function onClick(e) {\n              return _this2.clickBrandHendle(e, filteredBrands);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            value: brand,\n            defaultChecked: 0 == 0 ? true : false,\n            className: \"custom-control-input\",\n            id: brand,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }), React.createElement(\"label\", {\n            className: \"custom-control-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, brand));\n        }))));\n      }), React.createElement(SlideToggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, function (_ref2) {\n        var onToggle = _ref2.onToggle,\n            setCollapsibleElement = _ref2.setCollapsibleElement;\n        return React.createElement(\"div\", {\n          className: \"collection-collapse-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: \"collapse-block-title\",\n          onClick: onToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"colors\"), React.createElement(\"div\", {\n          className: \"collection-collapse-block-content\",\n          ref: setCollapsibleElement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"color-selector\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, _this2.props.colors.map(function (color, index) {\n          return React.createElement(\"li\", {\n            className: color,\n            title: color,\n            onClick: function onClick(e) {\n              return _this2.colorHandle(e, color);\n            },\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          });\n        })))));\n      }), React.createElement(SlideToggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, function (_ref3) {\n        var onToggle = _ref3.onToggle,\n            setCollapsibleElement = _ref3.setCollapsibleElement;\n        return React.createElement(\"div\", {\n          className: \"collection-collapse-block open\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: \"collapse-block-title\",\n          onClick: onToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"price\"), React.createElement(\"div\", {\n          className: \"collection-collapse-block-content block-price-content\",\n          ref: setCollapsibleElement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"collection-brand-filter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"custom-control custom-checkbox collection-filter-checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(InputRange, {\n          maxValue: _this2.props.prices.max,\n          minValue: _this2.props.prices.min,\n          value: _this2.props.filters.value,\n          onChange: function onChange(value) {\n            return _this2.props.filterPrice({\n              value: value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        })))));\n      }));\n    }\n  }]);\n\n  return Filter;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    brands: getBrands(state.data.products),\n    colors: getColors(state.data.products),\n    prices: getMinMaxPrice(state.data.products),\n    filters: state.filters\n  };\n};\n\nexport default connect(mapStateToProps, {\n  filterBrand: filterBrand,\n  filterColor: filterColor,\n  filterPrice: filterPrice\n})(Filter);","map":{"version":3,"sources":["D:\\selflearning\\all_in_one_multikart_react\\front-end\\src\\components\\collection\\common\\filter.jsx"],"names":["React","Component","connect","InputRange","SlideToggle","getBrands","getColors","getMinMaxPrice","filterBrand","filterColor","filterPrice","Filter","props","closeFilter","document","querySelector","style","state","openFilter","event","brands","alert","console","log","push","target","value","color","elems","querySelectorAll","forEach","call","el","classList","remove","add","filteredBrands","filters","brand","e","onToggle","setCollapsibleElement","map","index","clickBrandHendle","colors","colorHandle","prices","max","min","mapStateToProps","data","products"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport InputRange from 'react-input-range';\r\nimport 'react-input-range/lib/css/index.css';\r\nimport { SlideToggle } from 'react-slide-toggle';\r\n\r\n\r\nimport {getBrands, getColors, getMinMaxPrice} from '../../../services';\r\nimport {filterBrand, filterColor, filterPrice} from '../../../actions'\r\n\r\nclass Filter extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            openFilter: false\r\n        }\r\n    }\r\n\r\n    closeFilter = () => {\r\n        document.querySelector(\".collection-filter\").style = \"left: -365px\";\r\n    }\r\n\r\n    clickBrandHendle(event, brands) {\r\n        alert('test');\r\n        console.log(brands);\r\n        brands = [];\r\n        brands.push(event.target.value); // push in array checked value\r\n       \r\n        /* var index = brands.indexOf(event.target.value);\r\n        if (event.target.checked)\r\n         else\r\n            brands.splice(index, 1); // removed in array unchecked value  */\r\n\r\n        this.props.filterBrand(brands);\r\n    }\r\n\r\n    colorHandle(event, color){\r\n        var elems = document.querySelectorAll(\".color-selector ul li\");\r\n        [].forEach.call(elems, function(el) {\r\n            el.classList.remove(\"active\");\r\n        });\r\n        event.target.classList.add('active');\r\n        this.props.filterColor(color)\r\n    }\r\n\r\n    render (){\r\n        const filteredBrands = this.props.filters.brand;\r\n        //console.log(this.props.brands);\r\n        return (\r\n                <div className=\"collection-filter-block\">\r\n                    {/*brand filter start*/}\r\n                    <div className=\"collection-mobile-back\">\r\n                        <span className=\"filter-back\" onClick={(e) => this.closeFilter(e)} >\r\n                            <i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i> back\r\n                        </span>\r\n                    </div>\r\n                    <SlideToggle>\r\n                        {({onToggle, setCollapsibleElement}) => (\r\n                            <div className=\"collection-collapse-block\">\r\n                                <h3 className=\"collapse-block-title\" onClick={onToggle}>brand</h3>\r\n                                <div className=\"collection-collapse-block-content\"  ref={setCollapsibleElement}>\r\n                                    <div className=\"collection-brand-filter\">\r\n                                        {this.props.brands.map((brand, index) => {\r\n                                            /* console.log('filteredBrands');\r\n                                            console.log(filteredBrands); */\r\n                                            return (\r\n                                                <div className=\"collection-filter-checkbox\" key={index} onClick={(e) => this.clickBrandHendle(e,filteredBrands)} >\r\n                                                    <input type=\"checkbox\" value={brand} defaultChecked={0 == 0? true : false}  className=\"custom-control-input\" id={brand} />\r\n                                                    <label className=\"custom-control-label\"\r\n                                                           >{brand}</label>\r\n                                                </div> )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </SlideToggle>\r\n\r\n                    {/*color filter start here*/}\r\n                    <SlideToggle>\r\n                        {({onToggle, setCollapsibleElement}) => (\r\n                            <div className=\"collection-collapse-block\">\r\n                                <h3 className=\"collapse-block-title\" onClick={onToggle}>colors</h3>\r\n                                <div className=\"collection-collapse-block-content\" ref={setCollapsibleElement}>\r\n                                    <div className=\"color-selector\">\r\n                                        <ul>\r\n                                            {this.props.colors.map((color, index) => {\r\n                                                return (\r\n                                                    <li className={color} title={color} onClick={(e) => this.colorHandle(e, color)} key={index}></li> )\r\n                                            })}\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </SlideToggle>\r\n                    {/*price filter start here */}\r\n                    <SlideToggle>\r\n                        {({onToggle, setCollapsibleElement}) => (\r\n                            <div className=\"collection-collapse-block open\">\r\n                                <h3 className=\"collapse-block-title\" onClick={onToggle}>price</h3>\r\n                                <div className=\"collection-collapse-block-content block-price-content\" ref={setCollapsibleElement}>\r\n                                    <div className=\"collection-brand-filter\">\r\n                                        <div className=\"custom-control custom-checkbox collection-filter-checkbox\">\r\n                                            <InputRange\r\n                                                maxValue={this.props.prices.max}\r\n                                                minValue={this.props.prices.min}\r\n                                                value={this.props.filters.value}\r\n                                                onChange={value => this.props.filterPrice({ value })} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </SlideToggle>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    brands: getBrands(state.data.products),\r\n    colors: getColors(state.data.products),\r\n    prices: getMinMaxPrice(state.data.products),\r\n    filters: state.filters\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { filterBrand, filterColor, filterPrice }\r\n)(Filter);"]},"metadata":{},"sourceType":"module"}