{"ast":null,"code":"import _classCallCheck from \"D:\\\\selflearning\\\\all_in_one_multikart_react\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\selflearning\\\\all_in_one_multikart_react\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\selflearning\\\\all_in_one_multikart_react\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\selflearning\\\\all_in_one_multikart_react\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\selflearning\\\\all_in_one_multikart_react\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\selflearning\\\\all_in_one_multikart_react\\\\front-end\\\\src\\\\components\\\\collection\\\\common\\\\filter.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport InputRange from 'react-input-range';\nimport 'react-input-range/lib/css/index.css';\nimport { SlideToggle } from 'react-slide-toggle';\nimport { Link } from 'react-router-dom';\nimport { getBrands, getColors, getMinMaxPrice } from '../../../services';\nimport { filterBrand, filterColor, filterPrice } from '../../../actions';\n\nvar Filter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Filter, _Component);\n\n  function Filter(props) {\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filter).call(this, props));\n\n    _this.closeFilter = function () {\n      document.querySelector(\".collection-filter\").style = \"left: -365px\";\n    };\n\n    console.log('this is props');\n    console.log(props);\n    _this.state = {\n      openFilter: false\n    };\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"clickInitialBrandHendle\",\n    value: function clickInitialBrandHendle(initialBrand, brands) {\n      brands = [];\n      console.log('initialBrand');\n      console.log(initialBrand);\n      brands.push(initialBrand); // push in array checked value\n\n      /* var index = brands.indexOf(event.target.value);\r\n      if (event.target.checked)\r\n       else\r\n          brands.splice(index, 1); // removed in array unchecked value  */\n\n      this.props.filterBrand(brands);\n    }\n  }, {\n    key: \"clickBrandHendle\",\n    value: function clickBrandHendle(event, brands) {\n      brands = [];\n      var brand = event.target.value;\n      console.log('brands');\n      console.log(event.target.value);\n      brands.push(event.target.value); // push in array checked value\n\n      /* var index = brands.indexOf(event.target.value);\r\n      if (event.target.checked)\r\n       else\r\n          brands.splice(index, 1); // removed in array unchecked value  */\n\n      console.log('history push');\n      this.props.history.push(\"\".concat(process.env.PUBLIC_URL, \"/collection?=\").concat(brand));\n      this.props.filterBrand(brands);\n    }\n  }, {\n    key: \"colorHandle\",\n    value: function colorHandle(event, color) {\n      var elems = document.querySelectorAll(\".color-selector ul li\");\n      [].forEach.call(elems, function (el) {\n        el.classList.remove(\"active\");\n      });\n      event.target.classList.add('active');\n      this.props.filterColor(color);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var filteredBrands = this.props.filters.brand; //console.log(this.props.brands);\n\n      return React.createElement(\"div\", {\n        className: \"collection-filter-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"collection-mobile-back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"filter-back\",\n        onClick: function onClick(e) {\n          return _this2.closeFilter(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-angle-left\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), \" back\")), React.createElement(SlideToggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, function (_ref) {\n        var onToggle = _ref.onToggle,\n            setCollapsibleElement = _ref.setCollapsibleElement;\n        return React.createElement(\"div\", {\n          className: \"collection-collapse-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: \"collapse-block-title\",\n          onClick: onToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"a\"), React.createElement(\"div\", {\n          className: \"collection-collapse-block-content\",\n          ref: setCollapsibleElement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"collection-brand-filter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, _this2.props.brands.map(function (brand, index) {\n          return React.createElement(\"div\", {\n            className: \"custom-checkbox collection-filter-checkbox\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"text\",\n            onClick: function onClick(e) {\n              return _this2.clickBrandHendle(e, filteredBrands);\n            },\n            value: brand,\n            defaultChecked: filteredBrands.includes(brand) ? true : false,\n            className: \"custom-control-input\",\n            id: brand,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }), brand == filteredBrands ? React.createElement(\"label\", {\n            className: \"custom-control-label\",\n            htmlFor: brand,\n            style: {\n              color: 'pink'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, brand) : React.createElement(\"label\", {\n            className: \"custom-control-label\",\n            htmlFor: brand,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, brand));\n        }))));\n      }));\n    }\n  }]);\n\n  return Filter;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    brands: getBrands(state.data.products),\n    colors: getColors(state.data.products),\n    prices: getMinMaxPrice(state.data.products),\n    filters: state.filters\n  };\n};\n\nexport default connect(mapStateToProps, {\n  filterBrand: filterBrand,\n  filterColor: filterColor,\n  filterPrice: filterPrice\n})(Filter);","map":{"version":3,"sources":["D:\\selflearning\\all_in_one_multikart_react\\front-end\\src\\components\\collection\\common\\filter.jsx"],"names":["React","Component","connect","InputRange","SlideToggle","Link","getBrands","getColors","getMinMaxPrice","filterBrand","filterColor","filterPrice","Filter","props","closeFilter","document","querySelector","style","console","log","state","openFilter","initialBrand","brands","push","event","brand","target","value","history","process","env","PUBLIC_URL","color","elems","querySelectorAll","forEach","call","el","classList","remove","add","filteredBrands","filters","e","onToggle","setCollapsibleElement","map","index","clickBrandHendle","includes","mapStateToProps","data","products","colors","prices"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport InputRange from 'react-input-range';\r\nimport 'react-input-range/lib/css/index.css';\r\nimport { SlideToggle } from 'react-slide-toggle';\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport {getBrands, getColors, getMinMaxPrice} from '../../../services';\r\nimport {filterBrand, filterColor, filterPrice} from '../../../actions'\r\n\r\nclass Filter extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log('this is props');\r\n        console.log(props);\r\n        this.state = {\r\n            openFilter: false\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    closeFilter = () => {\r\n        document.querySelector(\".collection-filter\").style = \"left: -365px\";\r\n    }\r\n\r\n    clickInitialBrandHendle(initialBrand, brands) {\r\n        \r\n        \r\n        brands = [];\r\n        console.log('initialBrand');\r\n        console.log(initialBrand);\r\n        brands.push(initialBrand); // push in array checked value\r\n       \r\n        /* var index = brands.indexOf(event.target.value);\r\n        if (event.target.checked)\r\n         else\r\n            brands.splice(index, 1); // removed in array unchecked value  */\r\n        \r\n       \r\n        this.props.filterBrand(brands);\r\n        \r\n    }\r\n\r\n    clickBrandHendle(event, brands) {\r\n        \r\n        \r\n        brands = [];\r\n        let brand = event.target.value;\r\n        console.log('brands');\r\n        console.log(event.target.value);\r\n        brands.push(event.target.value); // push in array checked value\r\n       \r\n        /* var index = brands.indexOf(event.target.value);\r\n        if (event.target.checked)\r\n         else\r\n            brands.splice(index, 1); // removed in array unchecked value  */\r\n        console.log('history push');\r\n        this.props.history.push(`${process.env.PUBLIC_URL}/collection?=${brand}`);\r\n        this.props.filterBrand(brands);\r\n        \r\n    }\r\n\r\n    colorHandle(event, color){\r\n        var elems = document.querySelectorAll(\".color-selector ul li\");\r\n        [].forEach.call(elems, function(el) {\r\n            el.classList.remove(\"active\");\r\n        });\r\n        event.target.classList.add('active');\r\n        this.props.filterColor(color)\r\n    }\r\n\r\n    render (){\r\n        const filteredBrands = this.props.filters.brand;\r\n        //console.log(this.props.brands);\r\n        return (\r\n                <div className=\"collection-filter-block\">\r\n                    {/*brand filter start*/}\r\n                    <div className=\"collection-mobile-back\">\r\n                        <span className=\"filter-back\" onClick={(e) => this.closeFilter(e)} >\r\n                            <i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i> back\r\n                        </span>\r\n                    </div>\r\n                    <SlideToggle>\r\n                        {({onToggle, setCollapsibleElement}) => (\r\n                            <div className=\"collection-collapse-block\">\r\n                                <h3 className=\"collapse-block-title\" onClick={onToggle}>a</h3>\r\n                                <div className=\"collection-collapse-block-content\"  ref={setCollapsibleElement}>\r\n                                    <div className=\"collection-brand-filter\">\r\n                        \r\n                                        {this.props.brands.map((brand, index) => {\r\n                                            \r\n                                            return (\r\n                                                <div className=\"custom-checkbox collection-filter-checkbox\" key={index}>\r\n                                                    \r\n                                                \r\n                                                <input type=\"text\"  onClick={(e) => this.clickBrandHendle(e,filteredBrands)}   value={brand} defaultChecked={filteredBrands.includes(brand)? true : false}  className=\"custom-control-input\" id={brand} >\r\n                                                    \r\n                                                </input>\r\n                                                {brand == filteredBrands ? <label className=\"custom-control-label\"\r\n                                                       htmlFor={brand} style={{color:'pink'}}>{brand}</label>\r\n\r\n                                                    :<label className=\"custom-control-label\"\r\n                                                    htmlFor={brand}>{brand}</label>}\r\n                                                \r\n                                            </div>  )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </SlideToggle>\r\n\r\n                    {/*color filter start here*/}\r\n                    {/* <SlideToggle>\r\n                        {({onToggle, setCollapsibleElement}) => (\r\n                            <div className=\"collection-collapse-block\">\r\n                                <h3 className=\"collapse-block-title\" onClick={onToggle}>colors</h3>\r\n                                <div className=\"collection-collapse-block-content\" ref={setCollapsibleElement}>\r\n                                    <div className=\"color-selector\">\r\n                                        <ul>\r\n                                            {this.props.colors.map((color, index) => {\r\n                                                return (\r\n                                                    <li className={color} title={color} onClick={(e) => this.colorHandle(e, color)} key={index}></li> )\r\n                                            })}\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </SlideToggle> */}\r\n                    {/*price filter start here */}\r\n                    {/* <SlideToggle>\r\n                        {({onToggle, setCollapsibleElement}) => (\r\n                            <div className=\"collection-collapse-block open\">\r\n                                <h3 className=\"collapse-block-title\" onClick={onToggle}>price</h3>\r\n                                <div className=\"collection-collapse-block-content block-price-content\" ref={setCollapsibleElement}>\r\n                                    <div className=\"collection-brand-filter\">\r\n                                        <div className=\"custom-control custom-checkbox collection-filter-checkbox\">\r\n                                            <InputRange\r\n                                                maxValue={this.props.prices.max}\r\n                                                minValue={this.props.prices.min}\r\n                                                value={this.props.filters.value}\r\n                                                onChange={value => this.props.filterPrice({ value })} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </SlideToggle> */}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    brands: getBrands(state.data.products),\r\n    colors: getColors(state.data.products),\r\n    prices: getMinMaxPrice(state.data.products),\r\n    filters: state.filters\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { filterBrand, filterColor, filterPrice }\r\n)(Filter);"]},"metadata":{},"sourceType":"module"}